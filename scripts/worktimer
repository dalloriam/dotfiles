#! /usr/bin/env python3
""" Analytics-enabled work timing script. """

from dalloriam.datahose.client import DatahoseClient
from time import sleep

import subprocess
import tqdm


def send_message(title, message):
    # TODO: Support OSX notifications & move to stdlib.
    subprocess.Popen(['notify-send', title, message])
    return


class WorkTimer:

    def __init__(self):
        self._client = DatahoseClient()

    def run(self, title: str, minutes: int) -> None:
        send_message("Work Timer", title)
        seconds = minutes * 60
        for _ in tqdm.tqdm(range(seconds), desc=title, total=seconds):
            sleep(1)

    def log_task(self):
        send_message("Work Timer", "Time to start task!")
        task_goal = input('Enter next task goal: ').strip()
        self.run('Task Start', minutes=25)
        try:
            self._client.push(
                key='work.pomodoro.task',
                data={
                    'description': task_goal
                }
            )
        except Exception as e:
            print(f'Error pushing task to datahose: {e}.')
    
    def start(self):
        while True:
            for i in range(4):
                self.log_task()
                if i != 3:
                    self.run("Short Break!", minutes=5)

            self.run("Long Break!", minutes=15)


def main():
    w = WorkTimer()
    w.start()


if __name__ == '__main__':
    main()
